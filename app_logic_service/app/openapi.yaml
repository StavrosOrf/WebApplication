openapi: 3.0.0
info:
  description: This is the swagger file that goes with our server code
  version: 1.0.0
  title: Swagger ReST Article

paths:
  /users:
    get:
      operationId: index.get_all_users
      tags:
        - User
      summary: Return all users
      description: Return all users from users db object
      security:
        - jwt:
            []
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully read users from user db object
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                    email:
                      type: string
  
  /users/{email}:
    get:
      operationId: index.get_user
      tags:
        - User
      summary: Return User
      description: Return User Information [View]
      security:
        - jwt:
            []
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully read user from users db object
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                  email:
                    type: string
                    
  /friends:
    post:
      operationId: index.get_all_friends
      tags:
        - Friend
      summary: Return all friends
      description: Read all friends from user db object [Friends]
      security:
        - jwt:
            []
      requestBody:
        $ref: "#/components/requestBodies/friends"
      responses:
        "200":
          description: Successfully read friends from user db object
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                      
  /friends/add:
    post:
      operationId: index.add_friend
      tags:
        - Friend
      summary: Add a user as friend
      description: Add a user as friend to user db object [Add]
      security:
        - jwt:
            []
      requestBody:
        $ref: "#/components/requestBodies/add_friend"
      
      responses:
        "200":
          description: Successfully added friend
          
  /friends/remove:
    delete:
      operationId: index.remove_friend
      tags:
        - Friend
      summary: Remove friend
      description: Remove a user from friends value in user db object [Remove]
      security:
        - jwt:
            []
      parameters:
        - name: my_email
          in: query
          required: true
          schema:
            type: string
        - name: friend_email
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully removed friend
                      
  /galleries/{my_email}:
    post:
      operationId: index.get_all_galleries
      tags:
        - Gallery
      summary: Return all galleries
      description: Read all galleries from user db object [Galleries]
      security:
        - jwt:
            []
      parameters:
        - name: my_email
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully read galleries from user db object
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                    thumbnail:
                      type: string
                      format: binary
                 
  /galleries/add:
    post:
      operationId: index.add_gallery
      tags:
        - Gallery
      summary: Add a gallery
      description: Add a new gallery to user db object [Add_gallery]
      security:
        - jwt:
            []
      requestBody:
        $ref: "#/components/requestBodies/add_gallery"
      responses:
        "200":
          description: Successfully added friend
          
  /galleries/remove:
    delete:
      operationId: index.remove_gallery
      tags:
        - Gallery
      summary: Remove gallery
      description: Remove gallery from user db object [Remove_gallery]
      security:
        - jwt:
            []
      parameters:
        - name: my_email
          in: query
          required: true
          schema:
            type: string
        - name: glr_name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully removed friend
                      
  /gallery/images:
    post:
      operationId: index.get_all_images
      tags:
        - Image
      summary: Return all images of a gallery
      description: Read all images of a gallery by email and gallery name from user db object [a gallery]
      security:
        - jwt:
            []
      requestBody:
        $ref: "#/components/requestBodies/images"
      responses:
        "200":
          description: Successfully read gallery images from user db object
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    name:
                      type: string
                    image:
                      type: string
                      format: binary
                      
  /image:
    get:
      operationId: index.get_image
      tags:
        - Image
      summary: Return an image
      description: Read an image by email, gallery name and image name from user db object
      security:
        - jwt:
            []
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: glr_name
          in: query
          required: true
          schema:
            type: string
        - name: img_name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully read image info from user db object
          content:
            application/json:
              schema:
                properties:
                  img_URL:
                    type: string
                    
    post:
      operationId: index.add_image
      tags:
        - Image
      summary: Add an image
      description: Add an image to a user gallery [Add]
      security:
        - jwt:
            []
      requestBody:
        $ref: "#/components/requestBodies/add_image"
      responses:
        "200":
          description: Successfully added image to user db object and forwarded
                       for upload
    
    delete:
      operationId: index.remove_image
      tags:
        - Image
      summary: Remove image 
      description: Remove image from user db object [Remove]
      security:
        - jwt:
            []
      parameters:
        - name: my_email
          in: query
          required: true
          schema:
            type: string
        - name: glr_name
          in: query
          required: true
          schema:
            type: string
        - name: img_name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully removed image from user db object and     forwarded request for file removal
                    
  /image/comments:
    post:
      operationId: index.get_comments
      tags:
        - Comment
      summary: Return all comments of an image
      description: Return all comments by email, gallery name and image name from user db object
      security:
        - jwt:
            []
      requestBody:
        $ref: "#/components/requestBodies/comments"
      responses:
        "200":
          description: Successfully returned comments from user db object
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    username:
                      type: string
                    c_id:
                      type: string
                    comment:
                      type: string
                      
  /comments/{id}:
    post:
      operationId: index.add_comment
      tags:
        - Comment
      summary: Add a comment
      description: Add a comment to an image in user db object [Comment]
      security:
        - jwt:
            []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/add_comment"
      responses:
        "200":
          description: Successfully added comment
          
    delete:
      operationId: index.remove_comment
      tags:
        - Comment
      summary: Remove comment
      description: Remove comment from image from user db object [Remove]
      security:
        - jwt:
            []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully removed comment
          
    patch:
      operationId: index.edit_comment
      tags:
        - Comment
      summary: Edit comment
      description: Edit image comment and update user db object [Edit]
      security:
        - jwt:
            []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/edit_comment"
      responses:
        "200":
          description: Successfully editted comment
  
servers:
  - url: /api
components:
  requestBodies:
    login:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      required: true
    
    register:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
      required: true

    friends:
      content:
        application/json:
          schema:
            type: object
            properties:
              my_email:
                type: string
      required: true
    
    add_friend:
      content:
        application/json:
          schema:
            type: object
            properties:
              my_email:
                type: string
              friend_email:
                type: string
      required: true
    
    add_gallery:
      content:
        application/json:
          schema:
            type: object
            properties:
              my_email:
                type: string
              glr_name:
                type: string
      required: true
  
    images:
      content:
        application/json:
          schema:
            type: object
            properties:
              my_email:
                type: string
              glr_name:
                type: string
      required: true
    
    add_image:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              my_email:
                type: string
              glr_name:
                type: string
              img_name:
                type: string
              img:
                type: string
                format: binary
      required: true
            
    comments:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              glr_name:
                type: string
              img_name:
                type: string
      required: true
    
    add_comment:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              glr_name:
                type: string
              img_name:
                type: string
              comment:
                type: string
      required: true
    
    edit_comment:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                description: Email of user
                type: string
              glr_name:
                description: Name of gallery containing image
                type: string
              img_name:
                description: Name of image
                type: string
              comment:
                description: Comment string
                type: string
      required: true

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: index.decode_token